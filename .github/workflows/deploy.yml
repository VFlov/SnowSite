name: Deploy Production

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.x.x'

    - name: Install frontend dependencies
      working-directory: ./snowsite.client
      run: npm install

    - name: Build frontend
      working-directory: ./snowsite.client
      run: npm install @microsoft/signalr && npm install webrtc-adapter &&npm run build
      

    - name: Restore backend dependencies
      working-directory: ./SnowSite.Server
      run: dotnet restore

    - name: Build backend
      working-directory: ./SnowSite.Server
      run: dotnet build --configuration Release --no-restore

    - name: Publish backend
      working-directory: ./SnowSite.Server
      run: dotnet publish --configuration Release --output ./publish

    - name: Deploy to server
      env:
        SERVER_IP: ${{ secrets.SSH_HOST }}
        SERVER_USER: ${{ secrets.SSH_USERNAME }}
        SERVER_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        
        # Create deployment directory
        sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "mkdir -p /var/www/snowsite"
        
        # Copy files
        sshpass -p "$SERVER_PASSWORD" scp -r ./SnowSite.Server/publish/* $SERVER_USER@$SERVER_IP:/var/www/snowsite/
        
        # Restart application
        sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
        # Остановить существующую службу, если запущена
        sudo systemctl stop snowsite.service || true

        # Создать файл systemd service
        sudo bash -c 'cat > /etc/systemd/system/snowsite.service' << 'SERVICE'
        [Unit]
        Description=Веб-приложение SnowSite

        [Service]
        WorkingDirectory=/var/www/snowsite
        ExecStart=/usr/bin/dotnet /var/www/snowsite/SnowSite.Server.dll --urls "http://0.0.0.0:80;https://0.0.0.0:443;http://0.0.0.0:5000"
        Restart=always
        RestartSec=10
        SyslogIdentifier=snowsite
        Environment=ASPNETCORE_ENVIRONMENT=Production

        [Install]
        WantedBy=multi-user.target
        SERVICE

        # Перезагрузить systemd и запустить службу
        sudo systemctl daemon-reload
        sudo systemctl enable snowsite.service
        sudo systemctl start snowsite.service
        EOF